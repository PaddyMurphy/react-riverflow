{"version":3,"sources":["components/Navbar/Navbar.js","components/Graph/Graph.js","components/Gridtable/Gridrow.js","components/Gridtable/Gridtable.js","components/Riverflow/components.js","components/Riverflow/Riverflow.js","components/Footer/Footer.js","App.js","components/Error404/index.js","index.js","registerServiceWorker.js"],"names":["Navbar","react_default","a","createElement","className","Component","Graph","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","loading","url","undefined","selected","displayGraph","elClasses","Classnames","has-error","loadingClasses","is-hidden","src","alt","vm","graphBaseUrl","graphType","setState","newImage","Image","onload","e","onerror","Gridrow","selectRiver","bind","assertThisInitialized","sortBy","sortKey","key","_this2","sortOrders","target","currentTarget","id","dataset","history","push","pathname","concat","classList","contains","data","tableData","endDate","Date","toISOString","split","trClasses","level","is-selected","site","detailClasses","show-row","svgArrowClasses","arrow-up","rising","arrow-down","is-rising-fast","risingFast","onClick","data-selected","name","cfs","viewBox","xlinkHref","class","date","time","colSpan","href","location","condition","components_Graph_Graph","startDate","withRouter","Gridtable","sortOrder","sortField","handleSort","sort","that","_this$state","rows","query","searchQuery","toLowerCase","tableClasses","invisible","sortNameClasses","active","asc","desc","sortCfsClasses","slice","b","forEach","row","indexOf","components_Gridtable_Gridrow","version","points","data-sort","title","Notification","aria-label","hide","Errors","classes","Riverflow","handleRefreshTable","preventDefault","getUsgsData","handleFilterTable","value","clearSearch","baseMapUrl","baseUsgsUrl","rivers","Rivers","riversFormatted","sites","formatSites","nextProps","nextState","length","parentElement","add","refreshClasses","is-loading","errorClasses","components_Errors","hideNotification","components_Notification","htmlFor","autoComplete","onChange","type","placeholder","components_Gridtable_Gridtable","window","setTimeout","el","document","querySelector","scrollIntoView","behavior","list","d","match","join","Axios","get","params","parameterCd","format","period","siteStatus","then","response","timeSeries","displayUsgsData","catch","console","log","message","arr","currentValue","geo","oldestValue","newestValue","percentChanged","today","river","i","values","parseInt","dateTime","toLocaleTimeString","hour","minute","hour12","Math","round","toDateString","sourceInfo","geoLocation","geogLocation","siteCode","siteName","latitude","longitude","oldCfs","getConditions","mergeRiverInfo","Conditions","flow0","flow1","flow2","flow3","flow4","flow5","flow6","defaultProps","Footer","aria-hidden","height","width","fillRule","App","components_Navbar_Navbar","components_Riverflow_Riverflow","components_Footer_Footer","Error404","role","ReactDOM","render","HashRouter","Switch","Route","exact","path","component","getElementById","navigator","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller"],"mappings":"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","file":"static/js/main.4cc181fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Navbar.sass';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"Navbar\">\n        <header className=\"hero is-bold is-primary\">\n          <div className=\"container\">\n            <div className=\"header is-flex\">\n              <h1 className=\"title\">Riverflow</h1>\n              <p className=\"tagline\">Texas Edition</p>\n            </div>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Classnames from 'classnames';\nimport './Graph.sass';\n\nclass Graph extends Component {\n  static propTypes = {\n    selected: PropTypes.string,\n    graphType: PropTypes.string,\n    period: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      loading: false,\n      url: undefined,\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.selected) {\n      this.displayGraph(props.selected);\n    }\n  }\n\n  render() {\n    let elClasses = Classnames('graph-wrapper', {\n      'has-error': this.state.error ? true : false,\n    });\n\n    let loadingClasses = Classnames('graph-loading', {\n      'is-hidden': this.state.loading ? false : true,\n    });\n\n    return (\n      <div className={elClasses}>\n        <div className={loadingClasses}>Loading graph...</div>\n\n        <div className=\"graph-image\">\n          {this.state.url && (\n            <img\n              src={this.state.url}\n              className=\"graph\"\n              alt=\"USGS Water-data graph\"\n            />\n          )}\n\n          {this.state.error && <h2>Error loading the graph.</h2>}\n        </div>\n      </div>\n    );\n  }\n\n  displayGraph(selected) {\n    // display a graph of the flow\n    // TODO: catch error for undefined params\n    //       effects: Pecas at Pecos river 08419000\n    //       parm_cd=00060 (cfs) or 00065 (guage height ft)\n    const vm = this;\n    const graphBaseUrl =\n      '//waterdata.usgs.gov/nwisweb/graph?agency_cd=USGS&period=7';\n    // NOTE: usgs documentation is incorrect 'startDt' is 'begin_date'\n    let url =\n      graphBaseUrl + '&parm_cd=' + vm.props.graphType + '&site_no=' + selected;\n\n    // reset the graph and show / hide loading\n    vm.setState({ loading: true });\n\n    let newImage = new Image();\n    newImage.src = url;\n    newImage.onload = function(e) {\n      vm.setState({\n        loading: false,\n        url: url,\n      });\n    };\n    newImage.onerror = function(e) {\n      vm.setState({\n        error: true,\n        loading: false,\n        url: undefined,\n      });\n    };\n  }\n}\n\nexport default Graph;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Classnames from 'classnames';\nimport Graph from '../Graph/Graph';\nimport './Gridrow.css';\n\nclass Gridrow extends Component {\n\tstatic propTypes = {\n\t\ttableData: PropTypes.object.isRequired,\n\t\tgraphType: PropTypes.string.isRequired,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.selectRiver = this.selectRiver.bind(this);\n\t\tthis.sortBy = this.sortBy.bind(this);\n\n\t\tthis.state = {\n\t\t\tselected: undefined,\n\t\t\tsortKey: 'name',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { selected } = this.props;\n\t\tthis.setState({ selected: selected });\n\t}\n\n\tsortBy(key) {\n\t\tthis.setState({ sortKey: key }, () => {\n\t\t\tthis.sortOrders[key] = this.sortOrders[key] * -1;\n\t\t});\n\t}\n\n\t// binds this\n\tselectRiver(e) {\n\t\tconst target = e.currentTarget;\n\t\tconst id = target.dataset.selected;\n\t\t// set the url\n\t\tif (id) {\n\t\t\tthis.props.history.push({\n\t\t\t\tpathname: `${id}`,\n\t\t\t});\n\t\t}\n\n\t\t// deselect if clicking the active row\n\t\tif (target.classList.contains('is-selected')) {\n\t\t\tthis.setState({ selected: undefined });\n\t\t} else {\n\t\t\t// set selected\n\t\t\tthis.setState({ selected: target.dataset.selected });\n\t\t}\n\t}\n\n\trender() {\n\t\tconst data = this.props.tableData;\n\t\tconst endDate = new Date().toISOString().split('T')[0];\n\t\tlet startDate = undefined;\n\n\t\tlet trClasses = Classnames(data.level, {\n\t\t\t'is-selected': this.state.selected === data.site ? true : false,\n\t\t});\n\n\t\tlet detailClasses = Classnames('row-details', {\n\t\t\t'show-row': this.state.selected === data.site ? true : false,\n\t\t});\n\n\t\tlet svgArrowClasses = Classnames({\n\t\t\t'arrow-up': data.rising,\n\t\t\t'arrow-down': !data.rising,\n\t\t\t'is-rising-fast': data.risingFast,\n\t\t});\n\n\t\treturn (\n\t\t\t<tbody>\n\t\t\t\t<tr\n\t\t\t\t\tclassName={trClasses}\n\t\t\t\t\tonClick={this.selectRiver}\n\t\t\t\t\tdata-selected={data.site}\n\t\t\t\t>\n\t\t\t\t\t<th>{data.name}</th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span className=\"cfs-value\">{data.cfs}</span>\n\t\t\t\t\t\t<svg viewBox=\"0 0 27 30\" className={svgArrowClasses}>\n\t\t\t\t\t\t\t<use xlinkHref=\"#arrow-flow\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td className=\"wwclass\">{data.class}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span className=\"date\">{data.date}</span>\n\t\t\t\t\t\t<span className=\"time\">{data.time}</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr className={detailClasses}>\n\t\t\t\t\t<td colSpan=\"5\">\n\t\t\t\t\t\t<div className=\"row-details-wrapper columns\">\n\t\t\t\t\t\t\t<div className=\"column column-condition is-one-quarter\">\n\t\t\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t\t\t<p className=\"sitecode\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"button site-link\"\n\t\t\t\t\t\t\t\t\t\t\thref={data.location}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"blank\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tUSGS site {data.site} location\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>{data.condition}</p>\n\t\t\t\t\t\t\t\t\t<p className=\"small\">\n\t\t\t\t\t\t\t\t\t\tNOTE: The rising / falling arrows\n\t\t\t\t\t\t\t\t\t\tcompare the current value to the value\n\t\t\t\t\t\t\t\t\t\t12 hours ago. The river may already be\n\t\t\t\t\t\t\t\t\t\ton the way down\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"column column-graph is-three-quarters\">\n\t\t\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\t\tendDate={endDate}\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\n\t\t\t\t\t\t\t\t\tselected={this.state.selected}\n\t\t\t\t\t\t\t\t\tgraphType={this.props.graphType}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t);\n\t}\n}\n\nexport default withRouter(Gridrow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Classnames from 'classnames';\nimport Gridrow from './Gridrow';\nimport './Gridtable.sass';\n\nclass Gridtable extends Component {\n\tstatic propTypes = {\n\t\terror: PropTypes.bool,\n\t\tgraphType: PropTypes.string,\n\t\tloading: PropTypes.bool,\n\t\ttableData: PropTypes.array,\n\t\tsearchQuery: PropTypes.string,\n\t\tselected: PropTypes.string,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsortOrder: 1,\n\t\t\tsortField: 'name',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.handleSort = e => {\n\t\t\tthis.setState({\n\t\t\t\tsortField: e.target.dataset.sort,\n\t\t\t\tsortOrder: this.state.sortOrder === 1 ? -1 : 1,\n\t\t\t});\n\t\t};\n\t}\n\n\trender() {\n\t\tconst that = this;\n\t\tconst { sortField, sortOrder } = this.state;\n\t\tconst { selected } = this.props;\n\n\t\tlet rows = [];\n\t\tlet data = this.props.tableData;\n\t\tlet query = this.props.searchQuery.toLowerCase();\n\t\tlet name;\n\n\t\tlet loadingClasses = Classnames('loading notification is-warning', {\n\t\t\t'is-hidden': this.props.loading ? false : true,\n\t\t});\n\n\t\tlet tableClasses = Classnames('table', {\n\t\t\tinvisible: this.props.loading ? true : false,\n\t\t});\n\n\t\tlet sortNameClasses = Classnames({\n\t\t\tactive: sortField === 'name',\n\t\t\tasc: sortOrder === -1,\n\t\t\tdesc: sortOrder === 1,\n\t\t});\n\n\t\tlet sortCfsClasses = Classnames({\n\t\t\tactive: sortField === 'cfs',\n\t\t\tasc: sortOrder === -1,\n\t\t\tdesc: sortOrder === 1,\n\t\t});\n\n\t\t// sort first\n\t\tif (sortField === 'cfs') {\n\t\t\t// sort by number\n\t\t\tdata = data.slice().sort(function(a, b) {\n\t\t\t\ta = a[sortField];\n\t\t\t\tb = b[sortField];\n\t\t\t\treturn (a - b) * that.state.sortOrder;\n\t\t\t});\n\t\t} else {\n\t\t\t// sort by string\n\t\t\tdata = data.slice().sort(function(a, b) {\n\t\t\t\ta = a[sortField];\n\t\t\t\tb = b[sortField];\n\t\t\t\treturn (a === b ? 0 : a > b ? 1 : -1) * sortOrder;\n\t\t\t});\n\t\t}\n\n\t\t// construct the table rows\n\t\tdata.forEach(row => {\n\t\t\tname = row.name.toLowerCase();\n\n\t\t\tif (name.indexOf(query) === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<Gridrow\n\t\t\t\t\tkey={row.site}\n\t\t\t\t\ttableData={row}\n\t\t\t\t\tgraphType={that.props.graphType}\n\t\t\t\t\tselected={selected}\n\t\t\t\t/>,\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"gridtable\">\n\t\t\t\t<svg className=\"is-hidden\">\n\t\t\t\t\t<symbol viewBox=\"0 0 27 30\" version=\"1.1\">\n\t\t\t\t\t\t<g id=\"arrow-flow\">\n\t\t\t\t\t\t\t<polygon points=\"21.6 29.4545455 5.4 29.4545455 5.4 16.2 0 16.2 13.5 0 27 16.2 21.6 16.2\" />\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</symbol>\n\t\t\t\t</svg>\n\n\t\t\t\t<div className={loadingClasses}>\n\t\t\t\t\tLoading river information...\n\t\t\t\t</div>\n\n\t\t\t\t<table className={tableClasses}>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th className=\"th-name\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdata-sort=\"name\"\n\t\t\t\t\t\t\t\t\tclassName={sortNameClasses}\n\t\t\t\t\t\t\t\t\tonClick={this.handleSort}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th className=\"th-cfs\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdata-sort=\"cfs\"\n\t\t\t\t\t\t\t\t\tclassName={sortCfsClasses}\n\t\t\t\t\t\t\t\t\tonClick={this.handleSort}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCfs\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th className=\"th-class\">Class</th>\n\t\t\t\t\t\t\t<th className=\"th-time\">Time</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tfoot>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>River Name</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<abbr title=\"cubic feet per second\">CFS</abbr>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th className=\"th-class\">Class</th>\n\t\t\t\t\t\t\t<th className=\"th-time\">Time</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tfoot>\n\n\t\t\t\t\t{rows}\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Gridtable;\n","// components for Riverflow\nimport React from 'react';\n\nexport const Notification = props => {\n\treturn (\n\t\t<div className=\"notification content\">\n\t\t\t<button\n\t\t\t\taria-label=\"Close the notification\"\n\t\t\t\tclassName=\"delete is-small\"\n\t\t\t\tonClick={props.hide}\n\t\t\t>\n\t\t\t\t{' '}\n\t\t\t</button>\n\t\t\t<p>\n\t\t\t\tRiverflow provides the latest{' '}\n\t\t\t\t<abbr title=\"cubic feet per second\">CFS</abbr> from the USGS\n\t\t\t\tgauges of floatable rivers and creeks. The color indicates\n\t\t\t\toptimal floating conditions with additional inforamtion and a 7\n\t\t\t\tday graph in the details.\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport const Errors = props => {\n\treturn (\n\t\t<div className={props.classes}>\n\t\t\t<button\n\t\t\t\tclassName=\"delete\"\n\t\t\t\tonClick={props.hide}\n\t\t\t\taria-label=\"close error message\"\n\t\t\t>\n\t\t\t\t{' '}\n\t\t\t</button>\n\t\t\t{props.error}\n\t\t</div>\n\t);\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios';\nimport Classnames from 'classnames';\nimport Gridtable from '../../components/Gridtable/Gridtable';\nimport Rivers from '../../rivers.json';\nimport Conditions from '../../conditions.json';\nimport { Errors, Notification } from './components';\nimport './Riverflow.sass';\n\nclass Riverflow extends Component {\n  static propTypes = {\n    selected: PropTypes.string,\n  };\n\n  static defaultProps = {\n    selected: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      graphType: '00060', // defaults to cfs\n      loading: true,\n      searchQuery: '', // search filter\n      tableData: [],\n    };\n\n    this.baseMapUrl = '//maps.google.com/?q=';\n    this.baseUsgsUrl = 'https://waterservices.usgs.gov/nwis/iv/';\n    this.rivers = Rivers.data;\n    this.riversFormatted = [];\n    this.sites = this.formatSites();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.tableData.length) {\n      return true;\n    }\n    return false;\n  }\n\n  componentDidMount() {\n    // load the river data\n    this.getUsgsData();\n  }\n\n  handleRefreshTable = e => {\n    e.preventDefault();\n    this.getUsgsData();\n  };\n\n  handleFilterTable = e => {\n    this.setState({\n      searchQuery: e.target.value,\n    });\n  };\n\n  hideNotification(e) {\n    e.preventDefault();\n    e.currentTarget.parentElement.classList.add('is-hidden');\n  }\n\n  clearSearch = e => {\n    this.setState({\n      searchQuery: '',\n    });\n  };\n\n  render() {\n    const { error, graphType, loading, searchQuery, tableData } = this.state;\n    const { selected } = this.props;\n\n    let refreshClasses = Classnames('button is-primary', {\n      'is-loading': this.state.loading,\n    });\n\n    let errorClasses = Classnames('notification is-danger', {\n      'is-hidden': this.state.error === false,\n    });\n\n    return (\n      <div className=\"rivertable\">\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"Riverflow\">\n              <Errors\n                classes={errorClasses}\n                error={error}\n                hide={this.hideNotification}\n              />\n\n              <Notification hide={this.hideNotification} />\n\n              <div className=\"columns is-flex tools\">\n                <div className=\"column column-search\">\n                  <div className=\"field level-item\">\n                    <label htmlFor=\"search\" className=\"label\">\n                      Search\n                    </label>\n                    <p className=\"control\">\n                      <input\n                        autoComplete=\"off\"\n                        onChange={this.handleFilterTable}\n                        value={searchQuery}\n                        id=\"search\"\n                        name=\"search\"\n                        className=\"input\"\n                        type=\"text\"\n                        placeholder=\"Filter the table\"\n                      />\n                      <button\n                        className=\"delete is-small\"\n                        onClick={this.clearSearch}\n                        aria-label=\"clear the search\"\n                      >\n                        {' '}\n                      </button>\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"column column-button\">\n                  <button\n                    className={refreshClasses}\n                    onClick={this.handleRefreshTable}\n                    aria-label=\"Refresh the table data\"\n                  >\n                    <span className=\"refresh-long is-hidden-mobile\">\n                      refresh river table\n                    </span>\n                    <span className=\"refresh-short is-hidden-tablet\">\n                      &#8634;\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <Gridtable\n              loading={loading}\n              tableData={tableData}\n              graphType={graphType}\n              searchQuery={searchQuery}\n              selected={selected}\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n\n  // methods\n\n  scrollIntoView() {\n    window.setTimeout(() => {\n      const el = document.querySelector('.is-selected');\n      if (el) {\n        el.scrollIntoView({ behavior: 'smooth' });\n      }\n    }, 1000); // delay for usability\n  }\n\n  formatSites() {\n    let list = [];\n\n    this.rivers.forEach(function(d) {\n      // return only number values\n      if (d.value.match(/\\d+/g)) {\n        list.push(d.value);\n      }\n    });\n\n    return list.join();\n  }\n\n  /**\n   * Fetches usgs instant data from rivers.json.\n   * @return {number[]} response\n   */\n  getUsgsData() {\n    this.riversFormatted = [];\n    this.setState({ loading: true });\n    // fetch all site numbers in rivers.json\n    Axios.get(this.baseUsgsUrl, {\n      params: {\n        parameterCd: this.state.graphType,\n        sites: this.sites,\n        format: 'json',\n        period: 'PT12H', // past 12 hours\n        siteStatus: 'active',\n      },\n    })\n      .then(response => {\n        this.setState({ loading: false });\n        if (response.data.value.timeSeries) {\n          this.displayUsgsData(response.data.value.timeSeries);\n          this.scrollIntoView();\n          this.setState({ error: false });\n        } else {\n          this.setState({ error: 'no river data available' });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ loading: false });\n        this.setState({ error: error.message });\n      });\n  }\n\n  /**\n   * Formats usgs response for display from rivers.json.\n   * @return {number[]} formatted response\n   * @param {number[]} response - usgs fetch response.\n   */\n  displayUsgsData(response) {\n    const that = this;\n    const today = new Date();\n    let arr;\n    let river = {};\n    let currentValue;\n    let date;\n    let geo;\n    let oldestValue;\n    let newestValue;\n    let percentChanged;\n    let rising;\n    let risingFast;\n    let risingFastThreshold = 130; // percent change\n    let site;\n    let time;\n\n    response.forEach(function(d, i, a) {\n      // NOTE: some rivers do not support cfs (00060)\n      arr = d.values[0].value;\n      // return on error\n      if (!arr[0]) return;\n\n      // oldestValue is the first item\n      oldestValue = parseInt(arr[0].value, 10);\n      // currentValue is the last item\n      currentValue = arr[arr.length - 1];\n      newestValue = parseInt(currentValue.value, 10);\n      // get current date / time\n      date = new Date(currentValue.dateTime);\n      time = date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false,\n      });\n\n      percentChanged = Math.round((newestValue / oldestValue) * 100);\n\n      // only show date if not today\n      if (today.toDateString() === date.toDateString()) {\n        date = '';\n      }\n\n      geo = d.sourceInfo.geoLocation.geogLocation;\n      site = d.sourceInfo.siteCode[0].value;\n      rising = newestValue > oldestValue;\n      risingFast = percentChanged > risingFastThreshold;\n\n      river = {\n        name: d.sourceInfo.siteName,\n        location: that.baseMapUrl + geo.latitude + ',+' + geo.longitude,\n        site: site,\n        date: date,\n        time: time,\n        cfs: newestValue,\n        oldCfs: oldestValue,\n        condition: that.getConditions(newestValue).condition,\n        level: that.getConditions(newestValue).level,\n        rising: rising,\n        risingFast: risingFast,\n      };\n      // merge additional river data\n      that.mergeRiverInfo(river);\n    });\n\n    that.setState({ tableData: this.riversFormatted });\n  }\n  /**\n   * Merges class from rivers.json to matching response\n   * matches are based on USGS site numbers\n   * @param {Object} river\n   */\n  mergeRiverInfo(river) {\n    this.rivers.forEach(function(d) {\n      // add white water class\n      if (d.value === river.site) {\n        river.class = d.class;\n      }\n    });\n\n    this.riversFormatted.push(river);\n  }\n\n  /**\n   * Returns condition description and level color code from conditions.json\n   * @return {Object} condition and level\n   * @param {number} cfs - from usgs fetch response.\n   */\n  getConditions(cfs) {\n    let condition;\n    let level;\n    // convert to number\n    cfs = parseInt(cfs, 10);\n    // check the range of the cfs and display the appropriate message\n    if (cfs === 0) {\n      condition = Conditions.flow0;\n      level = 'level-0';\n    } else if (cfs > 0 && cfs < 50) {\n      condition = Conditions.flow1;\n      level = 'level-1';\n    } else if (cfs >= 50 && cfs < 100) {\n      condition = Conditions.flow2;\n      level = 'level-2';\n    } else if (cfs >= 100 && cfs < 300) {\n      condition = Conditions.flow3;\n      level = 'level-3';\n    } else if (cfs >= 300 && cfs < 600) {\n      condition = Conditions.flow4;\n      level = 'level-4';\n    } else if (cfs >= 600 && cfs < 2000) {\n      condition = Conditions.flow5;\n      level = 'level-5';\n    } else if (cfs >= 2000) {\n      condition = Conditions.flow6;\n      level = 'level-6';\n    }\n\n    return { condition: condition, level: level };\n  }\n}\n\nexport default Riverflow;\n","import React, { Component } from 'react';\nimport './Footer.sass';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"container\">\n          <div className=\"content has-text-centered\">\n            <p>\n              <strong>Riverflow</strong> by{' '}\n              <a href=\"//www.mountaindrawn.com\">Mountaindrawn</a>. The source\n              code is licensed\n              <a href=\"http://opensource.org/licenses/mit-license.php\"> MIT</a>.\n            </p>\n            <p>Built with React</p>\n            <p>\n              <a\n                className=\"icon\"\n                href=\"https://github.com/PaddyMurphy/react-riverflow\"\n              >\n                <b className=\"show-accessible\">view on github</b>\n                <svg\n                  aria-hidden=\"true\"\n                  className=\"octicon octicon-mark-github\"\n                  height=\"24\"\n                  version=\"1.1\"\n                  viewBox=\"0 0 16 16\"\n                  width=\"24\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n                  />\n                </svg>\n              </a>\n            </p>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Riverflow from './components/Riverflow/Riverflow';\nimport Footer from './components/Footer/Footer';\n//import GoogleMaps from './components/Map'; // eslint-disable-line\nimport './App.sass';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\t\t// if id set selected\n\t\tif (id) {\n\t\t\tthis.setState({ selected: id });\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { selected } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar />\n\n\t\t\t\t{/* <GoogleMaps /> */}\n\n\t\t\t\t<Riverflow selected={selected} />\n\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport './error404.scss';\n\nconst Error404 = props => {\n  return (\n    <div className=\"Error404\">\n      <h1>\n        404 for <code>{props.location.pathname}</code>, start panicking\n      </h1>\n      <span className=\"Error404-icon\" role=\"img\" aria-label=\"404 page\">\n        🚣🏼‍♀️\n      </span>\n    </div>\n  );\n};\n\nexport default Error404;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport Error404 from './components/Error404';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.sass';\n\nconst Routes = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={App} />\n\t\t\t\t<Route exact path=\"/:id\" component={App} />\n\t\t\t\t<Route path=\"/\" component={Error404} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nReactDOM.render(<Routes />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}